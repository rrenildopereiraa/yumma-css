@use "sass:math";
@use "../abstracts/variables" as vars;
@use "../abstracts/mixins/" as mix;
@use "../utilities/maps/" as maps;

$yma-transform-utils: (
  "transform-rotate": (
    "prefix": "t-r",
    "properties": (
      "transform",
    ),
    "values": (
      "0": rotate(0),
      "5": rotate(5deg),
      "10": rotate(10deg),
      "15": rotate(15deg),
      "20": rotate(20deg),
      "25": rotate(25deg),
      "30": rotate(30deg),
      "35": rotate(35deg),
      "40": rotate(40deg),
      "45": rotate(45deg),
      "50": rotate(50deg),
      "55": rotate(55deg),
      "60": rotate(60deg),
      "65": rotate(65deg),
      "70": rotate(70deg),
      "75": rotate(75deg),
      "80": rotate(80deg),
      "85": rotate(85deg),
      "90": rotate(90deg),
      "95": rotate(95deg),
      "100": rotate(100deg),
    ),
  ),

  "transform-scale": (
    "prefix": "t-s",
    "properties": (
      "transform",
    ),
    "values": (
      "0": scale(0%),
      "10": scale(10%),
      "20": scale(20%),
      "30": scale(30%),
      "40": scale(40%),
      "50": scale(50%),
      "60": scale(60%),
      "70": scale(70%),
      "80": scale(80%),
      "90": scale(90%),
      "100": scale(100%),
    ),
  ),

  "transform-scale-x": (
    "prefix": "t-sx",
    "properties": (
      "transform",
    ),
    "values": (
      "0": scaleX(0%),
      "10": scaleX(10%),
      "20": scaleX(20%),
      "30": scaleX(30%),
      "40": scaleX(40%),
      "50": scaleX(50%),
      "60": scaleX(60%),
      "70": scaleX(70%),
      "80": scaleX(80%),
      "90": scaleX(90%),
      "100": scaleX(100%),
    ),
  ),

  "transform-scale-y": (
    "prefix": "t-sy",
    "properties": (
      "transform",
    ),
    "values": (
      "0": scaleY(0%),
      "10": scaleY(10%),
      "20": scaleY(20%),
      "30": scaleY(30%),
      "40": scaleY(40%),
      "50": scaleY(50%),
      "60": scaleY(60%),
      "70": scaleY(70%),
      "80": scaleY(80%),
      "90": scaleY(90%),
      "100": scaleY(100%),
    ),
  ),

  "transform-skew": (
    "prefix": "t-sk",
    "properties": (
      "transform",
    ),
    "values": (
      "1": skew(1deg),
      "2": skew(2deg),
      "3": skew(3deg),
      "6": skew(6deg),
      "12": skew(12deg),
    ),
  ),

  "transform-skew-x": (
    "prefix": "t-skx",
    "properties": (
      "transform",
    ),
    "values": (
      "1": skewX(1deg),
      "2": skewX(2deg),
      "3": skewX(3deg),
      "6": skewX(6deg),
      "12": skewX(12deg),
    ),
  ),

  "transform-skew-y": (
    "prefix": "t-sky",
    "properties": (
      "transform",
    ),
    "values": (
      "1": skewY(1deg),
      "2": skewY(2deg),
      "3": skewY(3deg),
      "6": skewY(6deg),
      "12": skewY(12deg),
    ),
  ),

  "transform-origin": (
    "prefix": "t-o",
    "properties": (
      "transform-origin",
    ),
    "values": (
      "b": bottom,
      "bl": bottom left,
      "br": bottom right,
      "c": center,
      "l": left,
      "r": right,
      "t": top,
      "tl": top left,
      "tr": top right,
    ),
  ),

  "transform-translate-x": (
    "prefix": "t-tx",
    "properties": (
      "transform",
    ),
    "property-function": translateX,
    "values": maps.$yma-transform-translate-map,
  ),

  "transform-translate-y": (
    "prefix": "t-ty",
    "properties": (
      "transform",
    ),
    "property-function": translateY,
    "values": maps.$yma-transform-translate-map,
  ),
);

@each $name, $map in $yma-transform-utils {
  $prefix: map-get($map, "prefix");
  $properties: map-get($map, "properties");

  @include mix.create-utilities($map, $prefix, $properties);
}
